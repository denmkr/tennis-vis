version: '3'
services:
  db:
    image: postgres:11.6
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tennis
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
      - ./Database/docker-entrypoint-initdb.d/init_tables.sql:/docker-entrypoint-initdb.d/init_tables.sql
      - ./Database/data:/data

  #db:
  #  ports:
  #    - 5432:5432
  #  build:
  #   context: ./Database
  #    dockerfile: Dockerfile
  #  volumes:
  #    - postgresql:/var/lib/postgresql
  #    - postgresql_data:/var/lib/postgresql/data
  #    - ./Database/docker-entrypoint-initdb.d/init_tables.sql:/docker-entrypoint-initdb.d/init_tables.sql
  #    - ./Database/data:/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres
      - PGADMIN_DEFAULT_PASSWORD=postgres
    ports:
      - 5000:80
    expose:
      - 5000
    volumes: 
      - ./Database/servers.json:/pgadmin4/servers.json


  #gis-backend:
  #  ports:
  #    - 5000:5000
  #  build:
  #    context: ./Backend
  #    dockerfile: Dockerfile
  #  volumes:
  #    - ./Backend/:/var/opt/gis/

  backend:
    ports:
      - 8080:8080
    expose:
      - 8080
    build:
      context: ./Backend
      dockerfile: Dockerfile
    volumes:
      - ./Backend/tennis-backend:/var/opt/tennis-backend/

  frontend:
    ports:
      - 4200:4200
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    volumes:
      - ./Frontend/tennis-frontend:/var/opt/tennis-frontend/
    command: sh -c "npm install && npm run start:docker"

volumes: 
  postgresql:
    driver: local
  postgresql_data:
